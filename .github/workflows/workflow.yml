name: Workflow

on: [push, pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with PyLint
        run: |
          pylint --fail-under=8.0 ./src
      - name: Lint with DSLinter
        run: |
          pylint --fail-under=8.0 --load-plugins=dslinter ./src
      - name: Upload DSLinter report
        uses: actions/upload-artifact@v2
        with:
          name: dslinter-report
          path: outputs/dslinter_report.txt

      - name: Run dvc pipeline
        run: |
          dvc repro
      - uses: actions/upload-artifact@v3
        with:
          name: downloaded-dvc-data
          path: ./data
      - name: Show dvc metrics
        run: |
          dvc metrics show

      - name: Test with pytest and generate coverage reports
        run: |
          pytest --junitxml=outputs/tests-report.xml --cov=./tests/ --cov-report=xml:outputs/coverage.xml
      - name: Upload pytest report
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: outputs/tests-report.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: outputs/coverage.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Generate coveralls badge
        uses: coverallsapp/github-action@v2

  run_mllint:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: downloaded-dvc-data
      - uses: actions/download-artifact@v3
        with:
          name: pytest-results

      - uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run mllint
        run: python3 -m mllint --output ./mllint_report.md

      - uses: actions/upload-artifact@v3
        with:
          name: mllint-report
          path: ./mllint_report.md

  generate_pr_report_with_mllint:
    needs: run_mllint
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: mllint-report
      - uses: mshick/add-pr-comment@v2
        with:
          message-path: |
            ./mllint_report.md
